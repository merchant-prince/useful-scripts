#! /usr/bin/env python


import os
import sys
from subprocess import run, PIPE

from modules.Print import Print
from modules.Template import Template




if __name__ == "__main__":
    """
    Variables
    """
    templatesPath = f"{os.path.dirname(os.path.realpath(__file__))}/templates/vue"
    imageName = "vue"
    arguments = sys.argv[1:]
    userId = os.geteuid()
    groupId = os.getegid()

    """
    Run
    """
    imageExists = len(
            [ y for y in
                [ x.split() for x in
                    run(["docker", "images"], stdout=PIPE, text=True).stdout.split("\n") ]
                if len(y) > 0 and (y[0], y[1]) == ("vue", "latest") ]) == 1

    if not imageExists:
        Print.info("Creating new docker image")
        Print.eol(2)
        run(["docker", "build", "--tag", imageName,
                                "-"
            ],
            input=str(Template(f"{templatesPath}/vue-dockerfile.template").replace({})),
            encoding="ascii", check=True)
        Print.eol()
        Print.success("Created docker vue image")
        Print.eol(2)

    Print.info("Creating a new vue project")
    Print.eol(2)
    run(["docker", "run", "--rm",
                          "--interactive",
                          "--tty",
                          "--mount", f"type=bind,source={os.getcwd()},target=/application",
                          "--user", f"{userId}:{groupId}",
                          imageName] + arguments)
    Print.eol()
    Print.success("Created a new vue project")
    Print.eol(2)
